#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет состав программного интерфейса для интеграции с конфигурацией.
//
// Параметры:
//   Настройки - Структура - Настройки интеграции этого объекта.
//       См. возвращаемое значение функции ПодключаемыеКоманды.НастройкиПодключаемыхОтчетовИОбработок().
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	Настройки.ДобавитьКомандыЗаполнения = Истина;
	Настройки.Размещение.Добавить(Метаданные.Справочники._ДемоКонтрагенты);
КонецПроцедуры

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       Подробнее см. в ЗаполнениеОбъектов.ТаблицаКоманд().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       Подробнее см. в ЗаполнениеОбъектов.ПараметрыДобавления().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	Команда = КомандыЗаполнения.Добавить();
	Команда.Представление = НСтр("ru = 'Заполнить полное наименование (из расширения, на клиенте без записи объекта)'");
	Команда.Идентификатор = "ЗаполнитьПолноеНаименование";
	Команда.Порядок       = 10;
	Команда.МножественныйВыбор = Ложь;
	Команда.ВидимостьВФормах   = "ФормаЭлемента";
	Команда.РежимЗаписи        = "НеЗаписывать";
	Команда.ИмяФормы           = "Форма";
	Команда.Обработчик         = "Подключаемый_ЗаполнитьПолноеНаименование";
	
	Команда = КомандыЗаполнения.Добавить();
	Команда.Представление = НСтр("ru = 'Заполнить ИНН (из расширения, на сервере без записи объекта)'");
	Команда.Идентификатор = "ЗаполнитьИНН";
	Команда.Порядок       = 11;
	Команда.МножественныйВыбор = Ложь;
	Команда.ВидимостьВФормах   = "ФормаЭлемента";
	Команда.РежимЗаписи        = "НеЗаписывать";
	Команда.Обработчик         = "ЗаполнитьИНН";
	
	Команда = КомандыЗаполнения.Добавить();
	Команда.Представление = НСтр("ru = 'Добавить префикс к Наименованию (из расширения, открытие формы)...'");
	Команда.Идентификатор = "ДобавитьПрефиксКНаименованию";
	Команда.Порядок       = 12;
	Команда.ИмяФормы      = "Форма.ДополнительнаяФорма";
	
	Команда = КомандыЗаполнения.Добавить();
	Команда.Представление = НСтр("ru = 'Комплексная очистка (из расширения, на сервере)'");
	Команда.Идентификатор = "ОчиститьВсе";
	Команда.Порядок       = 13;
	Команда.Обработчик    = "ВыполнитьКоманду";
	
	Команда = КомандыЗаполнения.Добавить();
	Команда.Представление = НСтр("ru = 'Комплексное заполнение (из расширения, на клиенте)'");
	Команда.Идентификатор = "ЗаполнитьВсе";
	Команда.Порядок       = 14;
	Команда.ИмяФормы      = "Форма";
	Команда.Обработчик    = "Подключаемый_ЗаполнитьВсе";
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик команды.
Процедура ЗаполнитьИНН(ПустойПараметр, ПараметрыВыполнения) Экспорт
	Генератор = Новый ГенераторСлучайныхЧисел;
	
	ПараметрыВыполнения.Форма.Объект.ИНН = Формат(Генератор.СлучайноеЧисло(1, 999999999), "ЧЦ=12; ЧДЦ=0; ЧВН=; ЧГ=");
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = НСтр("ru = 'Поле ""ИНН"" заполнено.'");
	Сообщение.ИдентификаторНазначения = ПараметрыВыполнения.Форма.УникальныйИдентификатор;
	Сообщение.Поле = "Объект.ИНН";
	Сообщение.Сообщить();
	
	ПараметрыВыполнения.Форма.Модифицированность = Истина;
КонецПроцедуры

// Обработчик команды.
Процедура ВыполнитьКоманду(МассивКонтрагентов, ПараметрыВыполнения) Экспорт
	
	Команда = ПараметрыВыполнения.ОписаниеКоманды;
	
	ЗаполнятьНаименование = (Команда.Идентификатор = "ЗаполнитьПолноеНаименование" Или Команда.Идентификатор = "ЗаполнитьВсе");
	ДобавлятьПрефикс = (Команда.Идентификатор = "ДобавитьПрефиксКНаименованию" Или Команда.Идентификатор = "ЗаполнитьВсе");
	ОчищатьВсе = (Команда.Идентификатор = "ОчиститьВсе");
	
	МассивОшибок = Новый Массив;
	
	// Заполнение объектов
	Для Каждого Контрагент Из МассивКонтрагентов Цикл
		ОбъектНазначения = Контрагент.ПолучитьОбъект();
		
		Если ЗаполнятьНаименование И Не ОбъектНазначения.ЭтоГруппа Тогда
			Если Не ПустаяСтрока(ОбъектНазначения.НаименованиеПолное) Тогда
				МассивОшибок.Добавить(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Объект ""%1"" не обработан: реквизит ""НаименованиеПолное"" не пустой!'"),
						Строка(ОбъектНазначения)));
			Иначе
				ОбъектНазначения.НаименованиеПолное = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Команда: %1
					|Время изменения: %2'"),
					Команда.Представление,
					Строка(ТекущаяДатаСеанса()));
			КонецЕсли;
		КонецЕсли;
		
		Если ДобавлятьПрефикс Тогда
			ОбъектНазначения.Наименование = "ПР " + ОбъектНазначения.Наименование;
		КонецЕсли;
		
		Если ОчищатьВсе Тогда
			ОбъектНазначения.Наименование = СтрЗаменить(ОбъектНазначения.Наименование, "ПР ", "");
			Если Не ОбъектНазначения.ЭтоГруппа Тогда
				ОбъектНазначения.НаименованиеПолное = "";
				ОбъектНазначения.ИНН = "";
			КонецЕсли;
		КонецЕсли;
		
		ОбъектНазначения.Записать();
	КонецЦикла;
	
	// Вывод результата
	Всего = МассивКонтрагентов.Количество();
	Ошибок = МассивОшибок.Количество();
	Заполнено = Всего - Ошибок;
	
	Если Всего = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не выбраны объекты для изменения'");
	КонецЕсли;
	
	Если Всего = 1 Тогда
		Если Ошибок > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = МассивОшибок[0];
			Сообщение.Поле = "Объект.НаименованиеПолное";
			Сообщение.Сообщить();
		Иначе
			Если Команда.Идентификатор = "ЗаполнитьВсе" Тогда
				ЗаголовокОповещения = НСтр("ru = 'Наименование и префикс заполнены'");
			ИначеЕсли ЗаполнятьНаименование Тогда
				ЗаголовокОповещения = НСтр("ru = 'Полное наименование заполнено'");
			ИначеЕсли ДобавлятьПрефикс Тогда
				ЗаголовокОповещения = НСтр("ru = 'Добавлен префикс к краткому наименованию'");
			Иначе
				ЗаголовокОповещения = НСтр("ru = 'Наименование и префикс очищены'");
			КонецЕсли;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ЗаголовокОповещения;
			Сообщение.Сообщить();
		КонецЕсли;
		Возврат;
	КонецЕсли;
		
	Если Ошибок = 0 Тогда
		ТекстОповещения = НСтр("ru = 'Обработано'")
			+ " "
			+ СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(
				Всего,
				НСтр("ru = 'объект,объекта,объектов'"));
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОповещения;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Кратко = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Всего объектов: %1
			|Успешно заполнено: %2
			|Ошибок: %3'"),
		Формат(Всего,     "ЧН=0; ЧГ=0"),
		Формат(Заполнено, "ЧН=0; ЧГ=0"), 
		Формат(Ошибок,    "ЧН=0; ЧГ=0"));
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Кратко;
	Сообщение.Сообщить();
	
	Подробно = "";
	Для Каждого ТекстОшибки Из МассивОшибок Цикл
		Подробно = Подробно + "---" + Символы.ПС + Символы.ПС + ТекстОшибки + Символы.ПС + Символы.ПС;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Обработка заполнения справочника Демо: Контрагенты'", Метаданные.ОсновнойЯзык.КодЯзыка), 
		УровеньЖурналаРегистрации.Предупреждение, Метаданные.Справочники._ДемоКонтрагенты,,
		Подробно);
	
КонецПроцедуры

// Обработчик команды.
Процедура ВыполнитьКомандуВФоне(ПараметрыПроцедуры, АдресХранилища) Экспорт
	НачатьТранзакцию();
	ДатаЗавершения = ТекущаяДатаСеанса() + 5;
	ВыполнитьКоманду(ПараметрыПроцедуры.ПараметрКоманды, ПараметрыПроцедуры);
	Пока ТекущаяДатаСеанса() <= ДатаЗавершения Цикл
		// Имитация длительной операции
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

#КонецОбласти

#КонецЕсли